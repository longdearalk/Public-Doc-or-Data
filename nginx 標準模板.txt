【說明】

<說明一>
主要設定檔共兩個：
nginx.conf                              /etc/nginx/nginx.conf                       Nginx 通用主設定檔
/sites-available/default                /etc/nginx/sites-available/default          網站設定檔，可多個，現只使用一個
共通性引入檔共5個：一般來說不太需要異動
/sites-conf/general.conf                /etc/nginx/sites-conf/general.conf          
/sites-conf/php_fastcgi                 /etc/nginx/sites-conf/php_fastcgi
/sites-conf/security.conf               /etc/nginx/sites-conf/security.conf
/sites-conf/security.conf               /etc/nginx/sites-conf/security.conf
/sites-conf/security_append.conf        /etc/nginx/sites-conf/security_append.conf

其它可能有影響或需要搭配
/etc/security/limits.conf

待評估 Nginx 功能或語法
limit_req_zone 

設定跨站請求規則，因需信件超連結能維持用戶端瀏覽器之 cookie_id，
且自測驗中心登入(SSO)也可能讓 session 提早失效，故不採用 Strict 而改採 Lax
add_header 'Set-Cookie'             "Path=/; HttpOnly; Secure; SameSite=Strict";

<說明二>
設定檔應位於 sites-available 內，若要啟用則採軟連結放置於 sites-enabled 內，
另注意 sites-enabled 預設設定檔之檔名為 default1，
啟用備用網址(需要絕對路徑)，關閉時移除該軟連結：
ln -s /etc/nginx/sites-available/nutn /etc/nginx/sites-enabled/nutn

<說明三>
檢查配置檔：nginx -t
重載設定：systemctl reload nginx
重啟服務：systemctl restart nginx
合併：nginx -t && systemctl reload nginx && systemctl restart nginx
顯示已啟用之模組：nginx -V 2>&1 | tr ' ' '\n' | grep module

<說明四>
基本上皆適用於正式機與測試機，
注意應修改 server_name，以及是否具備 SSL ( 現正式機與測試機皆具備 SSL )。
priori.moe.gov.tw       140.110.122.51  正式機
prioridev.nutn.edu.tw   140.110.3.63    測試機
priori.nutn.edu.tw      140.110.122.51  應急機(例如遭DDOS、汙染攻擊或國教署DNS異常)
    南大應急版，使用不同 SSL 憑證(後綴NUTN)：
    ssl_certificate                     /etc/nginx/SSL/serverNUTN.pem;
    ssl_certificate_key                 /etc/nginx/SSL/serverNUTN.key;
    ssl_trusted_certificate             /etc/nginx/SSL/rootNUTN.cer;

<說明五-無SSL方案(noSSL)>
正式機環境應以 https(443 port + SSL) 為主，其中 SSL 應為公正第三方簽發 SSL ，
若因測試等原因，可採無SSL方案(noSSL)，其註解為 [[noSSL]]~[[/noSSL]] 。
無網址者雖可使用自簽 SSL，
但建議無網址時則採用 http(80 port + noSSL)，
有網址但無公正第三方簽發 SSL，亦建議採 http(80 port + noSSL)，
本文件提及無SSL方案(noSSL)，實作皆為 http(80 port + noSSL)。

https(443 port + SSL) 與 http(80 port + noSSL) 兩者可同時存在，
設定於各別的 server 區塊，視使用者連線之協定與埠號而定。

<說明六>
適用環境：Ubuntu Server 22.04 LTS + Nginx 1.27 + OpenSSL 3.0.2
系統有可能預裝 apache2 應移除，另apache2-utils為ab、rotatelogs等工具故可保留
apt memove apache2

<說明七>
add_header 可存在於每一層區塊( http, server, location, if in location )，
且下層繼承上層，但只要下層有任何一條 add_header ，
則上層所有 add_header 無法被繼承，意即下層整個覆蓋上層。
同理 rewrite 至另一個 location，也可能導致所有 add_header 遺失，
故若檢查到 add_header 遺失，可於每一層添加，必要時可抽出後 include 。

===== nginx.conf [Start] (133 lines) =====

## [[BOF]] ##                                                               [#]
#
## nginx.conf, 2025.03.20                                                   ##
## Some part reference or generated by nginxconfig.io,                      ##
## and https://ssl-config.mozilla.org/#server=nginx .                       ##
## [[demonstrate]]                                                          ##
## [MB]: Main Section.                                                      ##
## [SB]: Sub Section, must in Main Section.                                 ##
## [no]: no is number, such as [1] or [2.1], must in Sub Section.           ##
#
# [MB] Main conf. [Start]                                                   #
# Common.                                                                   #
user                                    www-data;
pid                                     /run/nginx.pid;
worker_processes                        auto;
worker_rlimit_nofile                    65535;

# Load modules, suggest in the top of http Block.                           #
include                     /etc/nginx/modules-enabled/*.conf;

# [SB] events. [Start]                                                      #
events {
    multi_accept                        on;
    worker_connections                  65535;
}
# [SB] events. [Endup]                                                        #
# [SB] http. [Start]                                                        #
http {
    # [1] Common.                                                           #
    charset                             utf-8;
    sendfile                            on;
    tcp_nopush                          on;
    tcp_nodelay                         on;
    server_tokens                       off;

    # [2] MIME types.                                                       #
    include                             mime.types;
    #include                            /etc/nginx/mime.types;
    default_type                        application/octet-stream;

    # [3] Log path. use http Block by default.                              #
    ## debug, info, notice, warn, error, crit, alert, emerg.                ##
    access_log                          /var/log/nginx/access.log;
    error_log                           /var/log/nginx/error.log warn;
    # [3.1] Log format settings, will setup in future.                      #
    #log_format                         main 
    #    '$remote_addr - $remote_user [$time_local] "$request" '
    #    '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
    #    '$http_cf_ray $http_cf_connecting_ip $http_x_forwarded_for $http_x_forwarded_proto '
    #    '$http_true_client_ip $http_cf_ipcountry $http_cf_visitor $http_cdn_loop';

    # [4] Nginx Service performance and burden.                                    #
    ## Maybe more fine-tuning later in the future.                          ##
    ## Some items such like client_max_body_size, will effect upload files  ##
    send_timeout 60s;
    client_max_body_size                100M;
    client_body_buffer_size             64k;
    client_body_timeout                 600s;
    client_header_buffer_size           1m;
    client_header_timeout               120s;
    large_client_header_buffers         16 64k;
    types_hash_max_size                 2048;
    types_hash_bucket_size              64;
    keepalive_timeout                   120s 120s;
    keepalive_requests                  10000;
    # [4.1] here are suggest don't setup to use default value.              #
    #server_names_hash_bucket_size      64;
    #server_name_in_redirect            off;
    #port_in_redirect                   off;

    # [5] SSL common steup & security.                                      #
    # The SSL web certificate is in /sites-available/default,               ##
    # [[noSSL]] This block is common steup,                                 ##
    # so if noSSL, this block Not need to modify.[[/noSSL]]                 ##
    # [5.1] SSL protocol, Should be Only TLSv1.2 TLSv1.3,                   #
    ## that No longer needed ssl_prefer_server_ciphers & ssl_ciphers,       ##
    ## and let latest mainstream browser to decide.                         ##
    ## OR set ssl_ciphers must with ssl_prefer_server_ciphers on.           ##
    ## Can use openssl, namp and curl to detect and evaluate SSL ciphers:   ##
    ## openssl s_client -connect [test.your.host]:443
    ## nmap --script "ssl-cert, ssl-enum-ciphers, sslv2-drown" -p443 [test.your.host]   ##
    ## ( '--script' is ssl-cert.nse, etc. Nmap Scripting Engine             ##
    ## ( can't not combine some parameter such like -sV -sC  )              ##
    ## curl -vvvv -I -L --tlsv1.2 --tls-max 1.2 -e ";auto" https://[test.your.host]     ##
    ssl_protocols                       TLSv1.2 TLSv1.3;
    ssl_ecdh_curve                      secp521r1:secp384r1:prime256v1;
    ssl_prefer_server_ciphers           off;
    ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    # [5.2] SSL performance.                                                #
    ssl_session_tickets                 off;
    ssl_session_timeout                 15m;
    ssl_session_cache                   shared:SSL:50m;
    ssl_buffer_size                     4k;
    # [5.3] OCSP Stapling.                                                  #
    # relation ssl_trusted_certificate in /sites-available/default .        ##
    ssl_stapling                        on;
    ssl_stapling_verify                 on;
    # [5.3.1] NCHC DNS Server 140.110.96.1(Tainan), 140.110.16.1(Hsinchu), 140.110.142.1(Taichung)
    # resolver should be preferred local DNS server, or can use public DNS server, such as 8.8.8.8 8.8.4.4 #
    resolver_timeout                    2s;
    resolver                            140.110.96.1 168.95.1.1 8.8.8.8 valid=60s;

    # [6] Security ( in http block, and behind SSL).                        #
    # [6.1] Load Secure headers.                                            #
    ## add_header Maybe LOST due to redirect pages or rewrite methods,      ##
    ## so, this Section can duplicate Both in http AND server Block.        ##
    include                             /etc/nginx/sites-conf/security.conf;
    # [6.2] Detect and define client HTTP protocol version.                 #
    ## Disable because none use any setup now.                              ##
    ## Use curl to check http header, '--http2' can replace to '--http1.1'. #
    ## curl -I -k --http2 https://[test.your.host]                          #
    #map $http_version $http_version_major {
    #    "HTTP/2.0"  2;
    #    default     1;
    #}

    # [7] Load configs, suggest in the bottom of http Block.                #
    include                             /etc/nginx/conf.d/*.conf;
    include                             /etc/nginx/sites-enabled/*;
}
# [SB] http. [Endup]
#mail {
    # none use.
#}
#proxy {
    # none use.
#}
#stream {
    # none use.
#}
# [MB] Main conf. [Endup] #
#
## [[EOF]] ##                                                               [#]

===== nginx.conf [Endup] =====

===== /sites-available/default [Start] (236 lines) =====

## [[BOF]] ##                                                               [#]
#
## /sites-available/default, 2025.03.20                                     ##
## Some part reference or generated by nginxconfig.io,                      ##
## and https://ssl-config.mozilla.org/#server=nginx .                       ##
## [[demonstrate]]                                                          ##
## [MB]: Main Section.                                                      ##
## [SB]: Sub Section, must in Main Section.                                 ##
## [no]: no is number, such as [1] or [2.1], must in Sub Section.           ##
#
# [MB] Priori servers configuration. [Start]                                #
server {
    # [1] Base conf and listen 443 port with https.                         #
    ## Enabled SSL with 'listen ssl;', Not recommended use 'ssl on;         ##
    ## Notice root path is /var/www/html .                                  ##
    ## If Have't domain name, can use ' _;                                  ##
    listen                              443 ssl default_server reuseport so_keepalive=on;
    listen                              [::]:443 ssl reuseport;
    server_name                         priori.moe.gov.tw;
    set                                 $base /var/www/html/;
    root                                $base/;
    if ($host != $server_name) {
        return 301 https://$server_name$request_uri;
    }
    # [1.1] http2 setting, Nginx will automatic management most items.      #
    ## Maybe more fine-tuning later in the future.                          ##
    ## curl -kv --http2 https://[test.your.host]                            ##
    http2                               on;
    #http2_max_field_size               16k;
    #http2_max_header_size              32k;
    #http2_max_window_size              262144; 
    #http2_max_concurrent_streams       100;
    # [1.1.1] HTTP/2 preload resources, Nginx will automatic management.    #
    ## so the following two items are Not recommended to use,               ##
    ## and will be removed in the future.                                   ##
    #http2_push                         on;
    #http2_push_preload                 on;
    # [1.2] Log path. use http Block by default.                            #
    #access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    #error_log  /var/log/nginx/error.log warn;

    # [2] SSL setting for https & security.                                 #
    ## SSL common settings is in nginx.conf.                                ##
    ## ALPN and SNIis include SSL certificate,                              ##
    ## read more information in technical documents.                        ##
    ## echo | openssl s_client -connect [test.your.host]:443 -alpn h2 | grep h2 ##
    ## echo | openssl s_client -connect [test.your.host]:443 -servername priori.moe.gov.tw | grep subject #
    ssl_certificate                     /etc/nginx/SSL/server.pem;
    ssl_certificate_key                 /etc/nginx/SSL/server.key;
    ssl_dhparam                         /etc/nginx/SSL/dhparams.pem;
    # [2.1] Should be with OCSP Stapling, and must behind ssl_certificate.  #
    # openssl s_client -tlsextdebug -status -connect [test.your.host]:443   #
    ssl_trusted_certificate             /etc/nginx/SSL/root.cer;
    ## [2.1.1] OCSP Stapling will auto setup by Nginx.
    # ssl_stapling_file     /etc/nginx/SSL/stapling.ocsp;
    # [2.3] HTTP Public Key Pinning(HPKP), will setup in future.            #
    #add_header Public-Key-Pins 'pin-sha256="Paste-first"; pin-sha256="Paste-second"; report-uri="https://9fe34499a39b5130fa25da9e401e04a0.report-uri.io/r/default/hpkp/enforce" max-age=5184000; includeSubDomains';

    # [3] Security ( Server & Location Block, and behind SSL).              #
    # [3.1] Load Secure headers.                                            #
    ## add_header Maybe LOST due to redirect pages or rewrite methods,      ##
    ## so, this Section can duplicate Both in http AND server Block.        ##
    ## location & if can't in http Block                                    ##
    include                             /etc/nginx/sites-conf/security.conf;
    # [3.2] Load Secure location.
    include                             /etc/nginx/sites-conf/security_append.conf;

    # [4] Load additional general config.                                   #
    ## Such like gzip and usually unchanged to common use.                  ##
    include                             /etc/nginx/sites-conf/general.conf;

    # [5] Load PHP base settings(original source).                          #
    ## Because setup root again in location '/',                            ##
    ## so, this Section can duplicate Both in here AND location Block.      ##
    location ~ \.php$ {
        include                         /etc/nginx/sites-conf/php_fastcgi.conf;
    }

    # [6] Regular Web location or alias settings.                           #
    # [6.1][WEB] priori resource & admin.                                   #
    ## location use '/', have below special content.                        ##
    ## Besides, should be set WEB_PATH_APPEND in resource web config.       ##
    ## \resource\application\config.php, as well as other web.              ##
    location / {
        #alias /var/www/resource/;
        #root /var/www/resource/;
        expires Thu, 31 Dec 2099 23:59:59 GMT;
        try_files $uri $uri/ /index.php?$args;
        location /admin/ {
            try_files $uri $uri/ /admin/index.php?$args;
        }
        location ~* (/application) {
            deny all;
            return 404;
        }
        limit_except GET HEAD POST { deny all; }
        
        # [6.1] Load PHP base settings(duplicate).                          #
        ## Because setup root again in location '/',                        ##
        ## so, this Section can duplicate Both in here AND server Section.  ##
        #location ~ \.php$ {
        #    include        /etc/nginx/sites-conf/php_fastcgi.conf;
        #}
    }

    # [6.2][WEB] priori recruit & admin.                                    #
    location /recruit/ {
        #alias /var/www/recruit/;
        try_files $uri $uri/ /recruit/index.php?$args;
        location /recruit/admin/ {
            try_files $uri $uri/ /recruit/admin/index.php?$args;
        }
        location ~* (/recruit/application) {
            deny all;
            return 404;
        }
        limit_except GET HEAD POST { deny all; }
    }

    # [6.3][WEB] priori report & admin. (descending year sort )             #
    location /report113/ {
        #alias /var/www/reportdb/;
        try_files $uri $uri/ /report113/index.php?$args;
        location /report113/admin/ {
            try_files $uri $uri/ /report113/admin/index.php?$args;
        }
        location ~* (/report113/application) {
            deny all;
            return 404;
        }
        limit_except GET HEAD POST { deny all; }
    }

    location /report112/ {
        #alias /var/www/reportdb/;
        try_files $uri $uri/ /report112/index.php?$args;
        location /report112/admin/ {
            try_files $uri $uri/ /report112/admin/index.php?$args;
        }
        location ~* (/report112/application) {
            deny all;
            return 404;
        }
        limit_except GET HEAD POST { deny all; }
    }

    location /report111/ {
        #alias /var/www/reportdb/;
        try_files $uri $uri/ /report111/index.php?$args;
        location /report111/admin/ {
            try_files $uri $uri/ /report111/admin/index.php?$args;
        }
        location ~* (/report111/application) {
            deny all;
            return 404;
        }
        limit_except GET HEAD POST { deny all; }
    }

    location /report110/ {
        #alias /var/www/reportdb/;
        try_files $uri $uri/ /report110/index.php?$args;
        location /report110/admin/ {
            try_files $uri $uri/ /report110/admin/index.php?$args;
        }
        location ~* (/report110/application) {
            deny all;
            return 404;
        }
        limit_except GET HEAD POST { deny all; }
    }
}
# [MB] Priori server configuration. [Endup]                                 #

# [MB] HTTP (80) redirect & othet Invalid server. [Start]                   #
## [[noSSL]] Turn on Only when Needed and with 80 port + noSSL.             ##
## Turn on to enable 'listen' 2 Lines. [[/noSSL]]                           ##
## ssl_reject_handshake Only gte NGINX 1.19.4.                              #
server {
    # [1] Base conf and listen 80 port without https.(NOT recommended)      #
    ## Current regulations are closed 80 port.                              #
    ## If Have't domain name, can use ' _;
    #listen                             81 reuseport;
    #listen                             [::]:81 reuseport;
    server_name                         _;
    set                                 $base /var/www/html/;
    root                                $base/;
    # [x] (option)If client visit IP or wrong port, can reject connect.     #
    ## In order to initialize SSL connection, given invalid certificate.    ##
    ssl_certificate                     /etc/nginx/SSL/Keep_invalid/invalid.pem;
    ssl_certificate_key                 /etc/nginx/SSL/Keep_invalid/invalid.key;
    ssl_reject_handshake                on;

    ## [[noSSL]]
    # [4] Load additional general config.                                   #
    ## Such like gzip and usually unchanged to common use.                  ##
    include                             /etc/nginx/sites-conf/general.conf;
    # [5] Load PHP base settings(original source).                          #
    ## Because setup root again in location '/',                            ##
    ## so, this Section can duplicate Both in here AND location Block.      ##
    location ~ \.php$ {
        include                         /etc/nginx/sites-conf/php_fastcgi.conf;
    }
    ## [[/noSSL]]

    # [1.1] Log path. use http Block by default.                            #
    #access_log                         /var/log/nginx/access.log combined buffer=512k flush=1m;
    #error_log                          /var/log/nginx/error.log warn;

    # [2] (option)Redirect http to https www                                #
    return 301 https://$host$request_uri;
}
server {
    # [1] Base conf and listen IP.                                          #
    ## Attack protection for IP.                                            ##
    server_name                         140.110.122.51;
    # [x] If client visit IP or wrong port, can reject connect.             #
    ## In order to initialize SSL connection, given invalid certificate.    ##
    ssl_certificate                     /etc/nginx/SSL/Keep_invalid/invalid.pem;
    ssl_certificate_key                 /etc/nginx/SSL/Keep_invalid/invalid.key;
    ssl_reject_handshake                on;
    return 444;
}
server {
    # [1] Base conf and listen none domain name(_).                         #
    ## Attack protection for none domain name.                              ##
    server_name                         _;
    # [x] If client visit IP or wrong port, can reject connect.             #
    ## In order to initialize SSL connection, given invalid certificate.    ##
    ssl_certificate                     /etc/nginx/SSL/Keep_invalid/invalid.pem;
    ssl_certificate_key                 /etc/nginx/SSL/Keep_invalid/invalid.key;
    ssl_reject_handshake                on;
    return 444;
}
# [MB] HTTP (80) redirect & othet Invalid server. [Endup]                   #
#
## [[EOF]] ##                                                               [#]

===== /sites-available/default [Endup] =====

===== /sites-conf/general.conf [Start] (62 lines) =====

## [[BOF]] ##                                                               [#]
#
## general.conf, 2024.11.28                                                 ##
#
    # [1] Compression transmission via gzip.                                #
    ## HTTP/2 have own compression, and Nginx will automatic set it.        ##
    ## Maybe more fine-tuning later in the future.                          ##
    ## gzip_disable "http2" disable.                                        ##
    gzip                                on;
    gzip_disable                        "MSIE [1-6].(?!.*SV1)";
    gzip_http_version                   1.1;
    gzip_comp_level                     1;
    gzip_vary                           on;
    gzip_proxied                        any;
    gzip_buffers                        16 16k;
    gzip_min_length                     1k;
    gzip_types text/css text/javascript text/x-js text/xml text/plain text/vtt text/markdown text/calendar text/vcard text/x-component text/cache-manifest text/vnd.rim.location.xloc text/x-cross-domain-policy application/json application/geo+json application/ld+json application/manifest+json application/x-web-app-manifest+json application/javascript application/x-javascript application/xml application/xhtml+xml application/atom+xml application/rdf+xml application/rss+xml application/wasm application/vnd.ms-fontobject application/x-font-ttf font/opentype  font/otf font/ttf font/eot image/svg+xml image/x-icon image/bmp;

    # [1.1] Chunked over HTTP/1.1 via gzip.                                 #
    chunked_transfer_encoding           on;

    # [2] Specify files or MIME types property.                             #
    # [2.1] Specify files
    location = /favicon.ico {
        log_not_found                   off;
    }
    location = /robots.txt {
        log_not_found                   off;
    }
    # [2.2] Media, assets, svg, fonts                                       #
    # or location ~* ^/.+\.(?:MIME types)$
    location ~* \.(?:pdf|txt|doc|docx|xls|xlsx|ppt|pptx|zip|rar|gz|exe)$ {
        add_header                      Content-disposition "attachment; filename=$1";
        default_type                    application/octet-stream;
    #   expires                         1d;
    }
    location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
    #   expires                         1d;
    }
    location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
        add_header                      Access-Control-Allow-Origin "*";
    #   expires                         1d;
    }

    # [3] Other misc settings.                                              #
    # [3.1] Add index.php to the list if you are using PHP.                 #
    index                               index.php index.html index.htm index.nginx-debian.html;
    # [3.2] Notify browser Cache time.                                      #
    ## Only can choose one of two add_header options                        ##
    ## (1) Choose Last-Modified, mean 'no-store, no-cache, must-revalidate',##
    ## with if_modified_since and etag.                                     ##
    add_header                          Last-Modified   $date_gmt;
    if_modified_since                   off;
    etag on;
    ## (2) Choose Cache-Control.                                            ##
    #add_header             Cache-Control   "public, max-age=600";
    # [3.2.1] For http/1.1, Equivalent to and include (1).(disabled)        #
    #expires                            600s;  
    # [3.2.2] For http/1.1, Compatible with older browsers.(disabled)       #
    #add_header                         Pragma "no-cache";
#
## [[EOF]] ##                                                               [#]

===== /sites-conf/general.conf [Endup] =====

===== /sites-conf/php_fastcgi.conf [Start] (26 lines) =====

## [[BOF]] ##                                                               [#]
#
## php_fastcgi.conf, 2024.11.22                                             ##
#
    # [1] PHP FPM fastcgi_params.                                           #
    ## Default and usually unchanged to common use.                         ##
    ## Use fastcgi_params instead of snippets/fastcgi-php.conf              ##
    try_files                           $fastcgi_script_name =404;
    include                             fastcgi_params;
    fastcgi_index                       index.php;
    fastcgi_pass                        unix:/var/run/php/php-fpm.sock;
    fastcgi_param   SERVER_SOFTWARE     nginx;
    fastcgi_param   DOCUMENT_ROOT       $realpath_root;
    fastcgi_param   SCRIPT_FILENAME     $realpath_root$fastcgi_script_name;
    fastcgi_param   PHP_ADMIN_VALUE     "open_basedir=$base/:/usr/lib/php/:/tmp/";
    # [2] PHP performance settings.                                         #
    ## Maybe more fine-tuning later in the future.                          ##
    fastcgi_buffers                     8 16k;
    fastcgi_buffer_size                 32k;
    fastcgi_connect_timeout             600;
    fastcgi_read_timeout                600;
    fastcgi_send_timeout                600;
    # [3] Other related settings.                                            #
    ## (none)
#
## [[EOF]] ##                                                               [#]

===== /sites-conf/php_fastcgi.conf [Endup] =====

===== /sites-conf/security.conf [Start] (55 lines) =====

## [[BOF]] ##                                                               [#]
#
## security.conf, 2024.11.28                                                ##
## This file Both in http AND server Block, http can't use location & if.   ##
#
    # [1] Secure headers(original source).                                  #
    ## add_header Maybe LOST due to redirect pages or rewrite methods,      ##
    ## so, this Section can duplicate Both in server AND location Block.    ##
    add_header 'Frame-Options'          SAMEORIGIN;
    add_header 'X-Frame-Options'        SAMEORIGIN;
    add_header 'X-Download-Options'     noopen;
    add_header 'X-Content-Type-Options' "nosniff" always;
    add_header 'X-XSS-Protection'       "1; mode=block" always;
    add_header 'X-Permitted-Cross-Domain-Policies'  none;
    add_header 'Referrer-Policy'        "strict-origin-when-cross-origin" always;
    add_header 'Permissions-Policy'     "interest-cohort=()" always;
    add_header 'Set-Cookie'             "Path=/; HttpOnly; Secure; SameSite=Lax";
    
    # [1.1] Enable SSL HSTS.                                                #
    ## It's Must use with SSL.                                              ##
    add_header 'Strict-Transport-Security'          "max-age=31536000; includeSubDomains; preload" always;
    # [1.1.1] Had set in CSP, and Let the client browser decide itself.     #
    #add_header 'Upgrade-Insecure-Requests'         1;

    # [1.2] Search engine crawl & index rule, similar effects robot.txt.    #
    ## Disable if don't know or plan it.                                    #
    #add_header 'X-Robots-Tag'               'none';

    # [3] Other security.                                                   #
    # [3.1] Content Security Policy(CSP), will setup in future.             #
    ## Something maybe consider improve, such like "require-trusted-types"  ##
    ## Can check security in https://csp-evaluator.withgoogle.com/.         ##
    ## Nginx CSP will be added after the page is sent,                      ##
    ## so the Nginx CSP cannot be removed in the PHP stage.                 ##
    ## To avoid duplication, Nginx global CSP Should Not be enabled,        ##
    ## can set in the location of individual websites, or in PHP.           ##
    ## (1) Here is unsafe CSP, and have Google Analytics.                   ##
    #add_header 'Content-Security-Policy' " sandbox allow-scripts allow-forms allow-modals allow-downloads allow-same-origin allow-popups allow-popups-to-escape-sandbox; upgrade-insecure-requests; default-src 'self' 'unsafe-inline' 'unsafe-eval' http: https: ws: wss: data: blob:; object-src 'none'; media-src 'self'; frame-ancestors 'none'; script-src 'self' 'unsafe-inline' 'unsafe-eval' data: https://www.google.com/ https://cse.google.com/ https://clients1.google.com/ https://analytics.google.com/ https://www.google-analytics.com https://www.googletagmanager.com/; " always;
    ## (2) Here is default safe CSP, Should Setup in Web application,       ##
    ## Such like \www\application\config\config.php.                        ##
    #add_header 'Content-Security-Policy' " sandbox; script-src 'none'; object-src 'none'; frame-ancestors 'none'; base-uri 'none'; require-trusted-types-for 'script'; report-uri https://priori.moe.gov.tw/; " always;
    # [3.1.1] Old types of CSP, check in future.                            #
    #add_header 'X-Content-Security-Policy'         $src;
    #add_header 'X-WebKit-CSP'                      $src;
    # [3.2] Cross-Origin Resource Sharing(CORS), will setup in future.      #
    ## Cross Origin series Include Resource Policy(CORP) &                  ##
    ## Opener Policy(COOP) & Embedder-Policy(COEP).                         ##
    ## CORS Usually paired with API.                                        ##
    add_header 'Access-Control-Allow-Origin'        https://$server_name;
    #add_header 'Access-Control-Allow-Credentials'  'true';
    #add_header 'Access-Control-Allow-Methods'      "POST, GET, HEAD, OPTIONS";
    #add_header 'Access-Control-Allow-Headers'       "X-TRICORDER,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type";
    #add_header 'Access-Control-Max-Age'            "1728000";
#
## [[BOF]] ##                                                               [#]

===== /sites-conf/security.conf [Endup] =====

===== /sites-conf/security_append.conf [Start] (67 lines) =====

## [[BOF]] ##                                                               [#]
#
## security_append.conf, 2024.11.28                                         ##
## This file only include in server Block,                                  ##
## because http can't use location & if.                                    ##
#
    # [1] Setup specific path or files permissions.                         #
    # This Section Should In front of [6.1]PHP & [7]location.               #
    # [1.1] htaccess, htpasswd etc.                                         #
    location ~ /\.ht {
        deny    all;
    }
    # [1.2] TWCA pki-validation.                                            #
    location ^~ /.well-known/pki-validation/ {
        allow   all;
    }
    # [1.3] Certbot ACME to get Let's Encrypt.                              #
    location ^~ /.well-known/acme-challenge/ {
        allow   all;
    }
    location ~ /\.(?!well-known) {
        deny    all;
    }
    # [1.4] Misc Path.                                                      #
    location ~ ^/api/ {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # [2] Other misc security.                                              #
    # [2.1] Cross-Site Request Forgery(CSRF) protect, will setup in future. #
    #valid_referers $server_name;
    #if ($invalid_referer) {
    #    rewrite ^/   $server_name;
    #    return 403;
    #}
    # [2.2] Only allow specific http methods.                               #
    if ($request_method = 'OPTIONS') {
            return 204;
    }
    if ($request_method !~ ^(GET|POST|HEAD)$) {
        return 405;
    }
    # [2.3] URL control code attack protection.                             #
    ## Path Manipulation: Special Characters.                               ##
    if ($request_uri ~* .*[\x00-\x1F\x7F]+.*) {
        return 435;
    }
    # [2.4] security.txt for web metadata.                                  #
    location /security.txt {
        return 301 /.well-known/security.txt;
    }
    location = /.well-known/security.txt {
        alias ~/security.txt;
    }

    # [3] For Reverse proxy server, so disable now.                         #
    #proxy_cookie_domain                off
    #proxy_cookie_path                  / "/; HttpOnly; Secure; SameSite=Lax";
    #proxy_http_version                 1.1;
    #proxy_set_header Upgrade           $http_upgrade;
    #proxy_set_header Connection        "Upgrade";
    #proxy_pass http://http11-backend;
    
    # [4] For Stream server, so disable now.                                #
    #ssl_preread                        on;
#
## [[BOF]] ##                                                               [#]

===== /sites-conf/security_append.conf [Endup] =====
